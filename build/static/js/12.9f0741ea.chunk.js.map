{"version":3,"sources":["../node_modules/reactstrap/es/Jumbotron.js","../node_modules/reactstrap/es/Container.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroupAddon.js","../node_modules/reactstrap/es/Input.js","components/edit/EditDataNameForm.tsx","components/edit/EditDataName.tsx","../node_modules/reactstrap/es/ButtonDropdown.js","components/edit-dropdowns/header/item/ListItem.tsx","components/edit-dropdowns/header/item/ItemListComponentList.tsx","components/edit-dropdowns/header/item/ItemListDropdown.tsx","components/edit-dropdowns/header/item/ItemListDropdownContainer.tsx","components/edit-dropdowns/header/submenu/SubMenuDropdownItem.tsx","components/edit-dropdowns/header/submenu/SubMenuItemList.tsx","components/edit-dropdowns/header/submenu/SubMenuDropdown.tsx","components/edit-dropdowns/header/submenu/SubMenuDropdownContainer.tsx","components/edit/EditHeader.tsx","components/buttons/DeleteButton.tsx","components/edit/EditItemName.tsx","components/edit/EditListItem.tsx","components/edit/EditListItemContainer.tsx","components/edit/EditSubMenu.tsx","components/edit/EditSubMenuContainer.tsx","components/edit/EditContentPane.tsx","containers/Edit.tsx"],"names":["propTypes","tag","tagPropType","fluid","PropTypes","bool","className","string","cssModule","object","Jumbotron","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","oneOfType","Container","containerClass","size","InputGroup","InputGroupText","addonType","oneOf","isRequired","children","node","InputGroupAddon","type","number","bsSize","valid","invalid","innerRef","func","plaintext","addon","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","EditDataNameForm","textValue","setInputText","currentName","name","id","placeholder","value","onChange","e","target","EditDataName","useState","setTextValue","dispatch","useAppDispatch","Button","color","onClick","editDataName","eventBus","getAllClassifications","ButtonDropdown","Dropdown","group","ListItem","item","parentId","useAppSelector","state","DropdownItem","undefined","editingItems","selectedItem","ItemListComponentList","itemList","loading","listNode","map","listItem","ItemListDropdown","items","setItems","useEffect","DropdownMenu","modifiers","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","ItemListDropdownContainer","classification","editing","selected","isLoading","setIsLoading","itemOpen","setItemOpen","timer","setTimeout","clearTimeout","style","margin","isOpen","toggle","prevState","disabled","DropdownToggle","caret","SubMenuDropdownItem","title","useSubMenu","subMenuObj","error","response","getSubMenu","onClickHandler","useCallback","ac","AbortController","editingSubMenu","abort","textTransform","SubMenuItemList","subMenus","Object","keys","key","SubMenuDropdown","SubMenuDropdownContainer","subMenuCount","subMenuOpen","setSubMenuOpen","subMenu","EditHeader","hasSubMenu","_id","toUpperCase","length","DeleteButton","modal","setModal","position","marginLeft","outline","WarningModal","actionText","itemText","toggleCallback","modalAction","deleteData","EditItemName","editItemName","EditItemList","itemType","auth","link","history","useHistory","isItem","push","contentPath","deleteItem","EditItemListContainer","EditListItem","EditSubMenu","classificationId","flexDirection","display","alignItems","EditListItemContainer","EditSubMenuContainer","EditContentPane","padding","justifyContent","withRouter"],"mappings":"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","file":"static/js/12.9f0741ea.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Jumbotron = function Jumbotron(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      fluid = props.fluid,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"fluid\"]);\n\n  var classes = mapToCssModules(classNames(className, 'jumbotron', fluid ? 'jumbotron-fluid' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nJumbotron.propTypes = propTypes;\nJumbotron.defaultProps = defaultProps;\nexport default Jumbotron;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import React, { FC, ChangeEvent } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface Props {\n    currentName: string\n    textValue: string\n    setInputText: (textValue: string) => void\n}\n\nconst EditDataNameForm: FC<Props> = (props: Props) => {\n    const { textValue, setInputText, currentName } = props\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputText(e.target.value)\n    }\n    return (\n        <Input\n            type=\"text\"\n            name={`dataForm/${currentName}`}\n            id=\"dataForm\"\n            placeholder={currentName}\n            value={textValue}\n            onChange={onChangeHandler}\n        />\n    )\n}\n\nexport default EditDataNameForm\n","import React, { FC, useState } from 'react'\nimport { Button, InputGroupAddon } from 'reactstrap'\nimport EditDataNameForm from './EditDataNameForm'\nimport { useAppDispatch } from '../../redux/hooks'\nimport { editDataName } from '../../redux/slices/edit'\nimport eventBus from '../../common/EventBus'\nimport { getAllClassifications } from '../../redux/slices/classification'\n\ninterface Props {\n    id: string\n    currentName: string\n    type: 'subMenu' | 'classification'\n}\n\nconst EditDataName: FC<Props> = ({ currentName, id, type }) => {\n    const [textValue, setTextValue] = useState<string>('')\n    const dispatch = useAppDispatch()\n\n    const onSubmit = () => {\n        dispatch(editDataName({ id, textValue, type }))\n        eventBus.dispatch('updateItems')\n        dispatch(getAllClassifications())\n    }\n\n    return (\n        <>\n            <EditDataNameForm\n                currentName={currentName}\n                textValue={textValue}\n                setInputText={setTextValue}\n            />\n            <InputGroupAddon addonType=\"append\">\n                <Button color=\"primary\" onClick={onSubmit}>\n                    <span>Save</span>\n                </Button>\n            </InputGroupAddon>\n        </>\n    )\n}\n\nexport default EditDataName\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React, { FC } from 'react'\nimport { DropdownItem } from 'reactstrap'\nimport { useAppSelector, useAppDispatch } from '../../../../redux/hooks'\nimport { selectedItem, editingItems } from '../../../../redux/slices/item'\nimport { IListItem } from '../../../../schemas'\n\ninterface Props {\n    item: IListItem\n}\nconst ListItem: FC<Props> = ({ item }) => {\n    const { parentId } = useAppSelector((state) => state.item)\n    const dispatch = useAppDispatch()\n\n    const handleItemSelection = () => {\n        if (parentId && parentId !== undefined) {\n            dispatch(editingItems(true))\n            dispatch(selectedItem({ parentId, item }))\n        }\n    }\n\n    return (\n        <DropdownItem onClick={handleItemSelection}>{item.name}</DropdownItem>\n    )\n}\n\nexport default ListItem\n","/* eslint-disable react/require-default-props */\nimport React, { FC } from 'react'\nimport { IListItem } from '../../../../schemas'\nimport ListItem from './ListItem'\n\ninterface Props {\n    loading: 'pending' | 'idle' | 'successful'\n    itemList: IListItem[]\n    size: number\n}\nconst ItemListComponentList: FC<Props> = ({ size, itemList, loading }) => {\n    const listNode =\n        size !== 0 &&\n        itemList &&\n        loading === 'successful' &&\n        (itemList as IListItem[]).map((listItem: IListItem) => {\n            return <ListItem item={listItem} />\n        })\n\n    return <>{listNode}</>\n}\nexport default ItemListComponentList\n","import React, { FC, useEffect, useState } from 'react'\nimport { DropdownMenu } from 'reactstrap'\nimport ItemListComponentList from './ItemListComponentList'\nimport { useAppSelector } from '../../../../redux/hooks'\nimport { IListItem } from '../../../../schemas'\nimport eventBus from '../../../../common/EventBus'\n\nconst ItemListDropdown: FC = () => {\n    const [items, setItems] = useState<IListItem[] | []>([])\n    const { itemList, size, loading } = useAppSelector((state) => state.item)\n\n    useEffect(() => {\n        if (loading === 'successful' && itemList !== undefined) {\n            setItems(itemList)\n        }\n        eventBus.dispatch('updateItems')\n    }, [itemList, loading])\n\n    return (\n        <DropdownMenu\n            modifiers={{\n                setMaxHeight: {\n                    enabled: true,\n                    order: 890,\n                    fn: (data) => ({\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: '10em',\n                        },\n                    }),\n                },\n            }}\n        >\n            <ItemListComponentList\n                itemList={items}\n                size={size}\n                loading={loading}\n            />\n        </DropdownMenu>\n    )\n}\n\nexport default ItemListDropdown\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-underscore-dangle */\nimport React, { FC, useState, useEffect } from 'react'\nimport { ButtonDropdown, DropdownToggle } from 'reactstrap'\nimport ItemListDropdown from './ItemListDropdown'\nimport { useAppSelector } from '../../../../redux/hooks'\n\nconst ItemListDropdownContainer: FC = () => {\n    const { classification, item } = useAppSelector((state) => state)\n    const { editing, selected, size } = item\n    const [isLoading, setIsLoading] = useState(true)\n    const [itemOpen, setItemOpen] = useState(false)\n    const itemToggle = () => setItemOpen((prevState) => !prevState)\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsLoading(false)\n        }, 500)\n        return () => clearTimeout(timer)\n    }, [])\n\n    return (\n        <ButtonDropdown\n            style={{ margin: '1rem' }}\n            addonType=\"prepend\"\n            isOpen={itemOpen}\n            toggle={itemToggle}\n            disabled={classification.loading !== 'successful'}\n        >\n            <DropdownToggle caret>\n                {!editing ? (\n                    <span className=\"edit___drop-down-item\">\n                        {isLoading ? (\n                            <span className=\"spinner-border spinner-border-sm\" />\n                        ) : (\n                            `Scans: ${size}`\n                        )}\n                    </span>\n                ) : (\n                    <span className=\"edit___drop-down-item\">\n                        {isLoading ? (\n                            <span className=\"spinner-border spinner-border-sm\" />\n                        ) : size < 15 ? (\n                            selected.name\n                        ) : (\n                            'Items'\n                        )}\n                    </span>\n                )}\n            </DropdownToggle>\n            <ItemListDropdown />\n        </ButtonDropdown>\n    )\n}\n\nexport default ItemListDropdownContainer\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-underscore-dangle */\nimport React, { FC, useCallback } from 'react'\nimport { DropdownItem } from 'reactstrap'\nimport { useAppDispatch } from '../../../../redux/hooks'\nimport { editingSubMenu } from '../../../../redux/slices/subMenu'\nimport useSubMenu from '../../../../hooks/useSubMenu'\nimport { editingItems } from '../../../../redux/slices/item'\n\ninterface Props {\n    id: string\n    title: string\n}\nconst SubMenuDropdownItem: FC<Props> = ({ id, title }) => {\n    const dispatch = useAppDispatch()\n    const [response, getSubMenu] = useSubMenu({\n        id,\n        subMenuObj: {},\n        isLoading: false,\n        error: null,\n    })\n\n    const onClickHandler = useCallback(() => {\n        const ac = new AbortController()\n\n        if (!response.isLoading) {\n            dispatch(editingSubMenu(true))\n            dispatch(editingItems(false))\n            getSubMenu()\n        }\n        return ac.abort()\n    }, [dispatch, response, getSubMenu])\n\n    return (\n        <DropdownItem\n            style={{ textTransform: 'uppercase' }}\n            onClick={onClickHandler}\n        >\n            {title}\n        </DropdownItem>\n    )\n}\n\nexport default SubMenuDropdownItem\n","/* eslint-disable no-underscore-dangle */\nimport React, { FC } from 'react'\nimport { useAppSelector } from '../../../../redux/hooks'\nimport SubMenuDropdownItem from './SubMenuDropdownItem'\n\nconst SubMenuItemList: FC = () => {\n    const { subMenus } = useAppSelector(\n        (state) => state.classification.selected\n    )\n\n    const listNode = Object.keys(subMenus).map((key: string) => {\n        return (\n            <SubMenuDropdownItem\n                id={subMenus[key]}\n                key={subMenus[key]}\n                title={key}\n            />\n        )\n    })\n    return <>{listNode}</>\n}\n\nexport default SubMenuItemList\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/prop-types */\nimport { DropdownMenu } from 'reactstrap'\nimport React, { FC } from 'react'\nimport SubMenuItemList from './SubMenuItemList'\n\nconst SubMenuDropdown: FC = () => {\n    return (\n        <DropdownMenu\n            modifiers={{\n                setMaxHeight: {\n                    enabled: true,\n                    order: 890,\n                    fn: (data) => ({\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: '10em',\n                        },\n                    }),\n                },\n            }}\n        >\n            <SubMenuItemList />\n        </DropdownMenu>\n    )\n}\n\nexport default SubMenuDropdown\n","/* eslint-disable react/prop-types */\nimport React, { useState, FC } from 'react'\nimport { ButtonDropdown, DropdownToggle } from 'reactstrap'\nimport { useAppSelector } from '../../../../redux/hooks'\nimport SubMenuDropdown from './SubMenuDropdown'\n\ninterface Props {\n    subMenuCount: number\n}\nconst SubMenuDropdownContainer: FC<Props> = ({ subMenuCount }) => {\n    const [subMenuOpen, setSubMenuOpen] = useState(false)\n    const { subMenu, classification } = useAppSelector((state) => state)\n    const subMenuToggle = () => setSubMenuOpen((prevState) => !prevState)\n\n    return (\n        <ButtonDropdown\n            style={{ margin: '1rem' }}\n            addonType=\"prepend\"\n            isOpen={subMenuOpen}\n            toggle={subMenuToggle}\n            disabled={classification.loading !== 'successful'}\n        >\n            <DropdownToggle caret>\n                {!subMenu.editing ? (\n                    <span className=\"edit___drop-down-item\">\n                        {classification.loading === 'pending' ? (\n                            <span className=\"spinner-border spinner-border-sm\" />\n                        ) : (\n                            `Sub-menus: ${subMenuCount}`\n                        )}\n                    </span>\n                ) : (\n                    <span className=\"edit___drop-down-item\">\n                        {classification.loading === 'pending' ? (\n                            <span className=\"spinner-border spinner-border-sm\" />\n                        ) : (\n                            subMenu.selected.name\n                        )}\n                    </span>\n                )}\n            </DropdownToggle>\n            <SubMenuDropdown />\n        </ButtonDropdown>\n    )\n}\n\nexport default SubMenuDropdownContainer\n","import React, { FC } from 'react'\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport EditDataName from './EditDataName'\nimport { IClassification } from '../../schemas'\nimport ItemListDropdownContainer from '../edit-dropdowns/header/item/ItemListDropdownContainer'\nimport SubMenuDropdownContainer from '../edit-dropdowns/header/submenu/SubMenuDropdownContainer'\nimport { useAppSelector } from '../../redux/hooks'\n\ninterface Props {\n    classification: IClassification\n    hasSubMenu: boolean\n    subMenuCount: number\n}\n\nconst EditHeader: FC<Props> = ({\n    classification,\n    hasSubMenu,\n    subMenuCount,\n}) => {\n    const { name, _id } = classification\n    const { item } = useAppSelector((state) => state)\n\n    return (\n        <div className=\"edit___header\">\n            <h2 className=\"edit___header___text\">\n                {name && name.toUpperCase()}\n            </h2>\n            <div className=\"edit___drop-downs\">\n                {hasSubMenu && (\n                    <SubMenuDropdownContainer subMenuCount={subMenuCount} />\n                )}\n                {item.itemList.length !== 0 && <ItemListDropdownContainer />}\n            </div>\n\n            <div className=\"edit___header___control\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Edit Title</InputGroupText>\n                    </InputGroupAddon>\n                    <EditDataName\n                        id={_id}\n                        currentName={name}\n                        type=\"classification\"\n                    />\n                </InputGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default EditHeader\n","import React, { FC, useState, useCallback } from 'react'\nimport { Button } from 'reactstrap'\nimport { useAppDispatch } from '../../redux/hooks'\nimport { deleteData } from '../../redux/slices/edit'\nimport WarningModal from '../WarningModal'\n\ninterface Props {\n    id: string\n    type: 'subMenu' | 'classification'\n    title: string\n}\n\nconst DeleteButton: FC<Props> = ({ id, type, title }) => {\n    const [modal, setModal] = useState(false)\n    const dispatch = useAppDispatch()\n    const toggle = useCallback(() => {\n        setModal(!modal)\n    }, [modal])\n\n    const handleDelete = () => {\n        dispatch(\n            deleteData({\n                id,\n                type,\n            })\n        )\n        toggle()\n    }\n\n    return (\n        <>\n            <Button\n                style={{ position: 'relative', marginLeft: '4rem' }}\n                className=\"danger-btn-edit\"\n                outline\n                color=\"danger\"\n                onClick={toggle}\n            >\n                {title}\n            </Button>\n            <WarningModal\n                actionText=\"Permanently delete \"\n                itemText={type}\n                setModal={modal}\n                toggleCallback={toggle}\n                modalAction={handleDelete}\n            />\n        </>\n    )\n}\n\nexport default DeleteButton\n","/* eslint-disable react/require-default-props */\nimport React, { FC, useState } from 'react'\nimport { Button, InputGroupAddon } from 'reactstrap'\nimport EditDataNameForm from './EditDataNameForm'\nimport { useAppDispatch } from '../../redux/hooks'\nimport { editItemName } from '../../redux/slices/edit'\nimport { IListItem } from '../../schemas'\nimport eventBus from '../../common/EventBus'\nimport { getAllClassifications } from '../../redux/slices/classification'\n\ninterface Props {\n    id: string\n    item: IListItem\n    type: 'subMenu' | 'classification'\n}\nconst EditItemName: FC<Props> = ({ id, item, type }) => {\n    const [textValue, setTextValue] = useState<string>('')\n    const dispatch = useAppDispatch()\n\n    const onSubmit = () => {\n        dispatch(editItemName({ id, textValue, item, type }))\n        if (type === 'subMenu') {\n            eventBus.dispatch('updateSubMenus')\n            eventBus.dispatch('updateItems')\n        } else {\n            eventBus.dispatch('updateItems')\n        }\n        dispatch(getAllClassifications())\n    }\n\n    return (\n        <>\n            <EditDataNameForm\n                currentName={item.name}\n                textValue={textValue}\n                setInputText={setTextValue}\n            />\n            <InputGroupAddon addonType=\"append\">\n                <Button color=\"primary\" onClick={onSubmit}>\n                    <span>Save</span>\n                </Button>\n            </InputGroupAddon>\n        </>\n    )\n}\n\nexport default EditItemName\n","import React, { FC, useCallback, useState } from 'react'\nimport {\n    Button,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Container,\n} from 'reactstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\nimport EditItemName from './EditItemName'\nimport { deleteItem, deleteData } from '../../redux/slices/edit'\nimport { IListItem } from '../../schemas'\nimport WarningModal from '../WarningModal'\n\nconst EditItemList: FC = () => {\n    const [modal, setModal] = useState(false)\n    const { selected, itemType, parentId } = useAppSelector(\n        (state) => state.item\n    )\n    const { subMenu, auth } = useAppSelector((state) => state)\n    const { name, link } = selected\n    const history = useHistory()\n    const dispatch = useAppDispatch()\n\n    const isItem = (value: unknown): value is IListItem => {\n        return !!value && !!(value as IListItem)\n    }\n\n    const toggle = useCallback(() => {\n        setModal(!modal)\n    }, [modal])\n\n    const handleEditItemParent = () => {\n        history.push(`${auth.contentPath}/move/${link}`)\n    }\n\n    const handleDelete = () => {\n        if (selected !== undefined && parentId && isItem(selected)) {\n            if (link && name) {\n                dispatch(\n                    deleteItem({\n                        id: parentId,\n                        type: itemType,\n                        item: selected,\n                    })\n                )\n                if (\n                    selected.type === 'subMenu' &&\n                    subMenu.selected.itemList.length === 1\n                ) {\n                    dispatch(deleteData({ id: parentId, type: 'subMenu' }))\n                }\n            }\n        }\n    }\n\n    return (\n        <div className=\"edit___item\">\n            <Container className=\"edit___text-wrap\">\n                <span className=\"span-header___capital___light\">\n                    Selected scan:{' '}\n                </span>\n                <span className=\"span-header___capital\">{`\"${name}\"`}</span>\n                <Button\n                    style={{ marginLeft: '1rem' }}\n                    type=\"button\"\n                    outline\n                    color=\"primary\"\n                    onClick={handleEditItemParent}\n                >\n                    <span>Move</span>\n                </Button>\n                <Button\n                    style={{ marginLeft: '1rem' }}\n                    color=\"danger\"\n                    outline\n                    onClick={toggle}\n                >\n                    <span>Delete</span>\n                </Button>\n            </Container>\n            <br />\n\n            <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>Edit Title</InputGroupText>\n                </InputGroupAddon>\n                {isItem(selected) && parentId && (\n                    <EditItemName\n                        id={parentId}\n                        item={selected}\n                        type={itemType}\n                    />\n                )}\n            </InputGroup>\n            <WarningModal\n                actionText=\"Permanently delete\"\n                itemText={name}\n                setModal={modal}\n                toggleCallback={toggle}\n                modalAction={handleDelete}\n            />\n        </div>\n    )\n}\nexport default EditItemList\n","/* eslint-disable no-undef */\n/* eslint-disable no-underscore-dangle */\nimport React, { FC } from 'react'\nimport EditListItem from './EditListItem'\nimport { useAppSelector } from '../../redux/hooks'\n\nconst EditItemListContainer: FC = () => {\n    const { size, loading, editing } = useAppSelector((state) => state.item)\n\n    return size !== 0 && loading === 'successful' && editing ? (\n        <EditListItem />\n    ) : null\n}\nexport default EditItemListContainer\n","/* eslint-disable no-underscore-dangle */\nimport React, { FC } from 'react'\nimport {\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Jumbotron,\n    Container,\n} from 'reactstrap'\nimport EditDataName from './EditDataName'\nimport DeleteButton from '../buttons/DeleteButton'\nimport EditListItemContainer from './EditListItemContainer'\nimport { useAppSelector } from '../../redux/hooks'\n\nconst EditSubMenu: FC = () => {\n    const { selected } = useAppSelector((state) => state.subMenu)\n    const classificationId = useAppSelector(\n        (state) => state.classification.selected._id\n    )\n    const { _id, name } = selected\n\n    return (\n        <div className=\"edit___content\">\n            <Jumbotron fluid>\n                <Container\n                    fluid\n                    style={{\n                        flexDirection: 'column',\n                        display: 'flex',\n                        alignItems: 'center',\n                    }}\n                >\n                    <div className=\"edit___item\">\n                        <Container className=\"edit___text-wrap\">\n                            <span className=\"span-header___capital___light\">\n                                Sub Menu:{' '}\n                            </span>\n                            <span className=\"span-header___capital\">\n                                {`\"${name}\"`}\n                            </span>\n                            <DeleteButton\n                                id={`${classificationId}/${_id}`}\n                                type=\"subMenu\"\n                                title=\"Delete\"\n                            />\n                        </Container>\n                        <br />\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Edit Title</InputGroupText>\n                            </InputGroupAddon>\n                            <EditDataName\n                                id={`${classificationId}/${_id}`}\n                                type=\"subMenu\"\n                                currentName={name}\n                            />\n                        </InputGroup>\n                    </div>\n                    <EditListItemContainer />\n                </Container>\n            </Jumbotron>\n        </div>\n    )\n}\n\nexport default EditSubMenu\n","import React, { FC } from 'react'\nimport EditSubMenu from './EditSubMenu'\n\nconst EditSubMenuContainer: FC = () => {\n    return <EditSubMenu />\n}\n\nexport default EditSubMenuContainer\n","import React, { FC, useEffect } from 'react'\nimport { Container } from 'reactstrap'\nimport EditSubMenuContainer from './EditSubMenuContainer'\nimport EditItemList from './EditListItem'\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\nimport eventBus from '../../common/EventBus'\n// RouteComponentProps\ninterface Props {\n    hasSubMenu: boolean\n    editing: boolean\n}\nconst EditContentPane: FC<Props> = ({ hasSubMenu, editing }) => {\n    const { classification, subMenu, item } = useAppSelector((state) => state)\n    const { itemType } = item\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            eventBus.dispatch('updateItems')\n        }, 10)\n        return () => clearTimeout(timer)\n    }, [classification, subMenu, item, itemType, dispatch])\n\n    return (\n        <Container\n            fluid\n            style={{\n                display: 'flex',\n                padding: '2rem',\n                justifyContent: 'center',\n            }}\n        >\n            {hasSubMenu &&\n                subMenu.editing &&\n                subMenu.loading === 'successful' && <EditSubMenuContainer />}\n\n            {editing && !subMenu.editing && item.editing && <EditItemList />}\n        </Container>\n    )\n}\n\nexport default EditContentPane\n","/* eslint-disable no-undef */\n/* eslint-disable no-underscore-dangle */\nimport React, { FC } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Container } from 'reactstrap'\nimport { useAppSelector } from '../redux/hooks'\nimport EditHeader from '../components/edit/EditHeader'\nimport { IClassification } from '../schemas'\nimport EditContentPane from '../components/edit/EditContentPane'\nimport DeleteButton from '../components/buttons/DeleteButton'\n\nconst Edit: FC = () => {\n    const { auth } = useAppSelector((state) => state)\n    const { selected, subMenuCount, editing } = useAppSelector(\n        (state) => state.classification\n    )\n\n    const isClassification = (value: unknown): value is IClassification => {\n        return !!value && !!(value as IClassification)\n    }\n\n    return isClassification(selected) && auth.contentPath ? (\n        <>\n            <DeleteButton\n                id={selected._id}\n                type=\"classification\"\n                title=\"Delete\"\n            />\n            <Container>\n                <EditHeader\n                    classification={selected}\n                    subMenuCount={subMenuCount}\n                    hasSubMenu={selected.hasSubMenu}\n                />\n            </Container>\n            <div className=\"edit\">\n                <hr className=\"my-2\" />\n                <EditContentPane\n                    hasSubMenu={selected.hasSubMenu}\n                    editing={editing}\n                />\n            </div>\n        </>\n    ) : null\n}\n\nexport default withRouter(Edit)\n"],"sourceRoot":""}